const {lndEnvConfig} = require('../../lnd')
const {buffer} = require('../../core')

const {isValidUTF8} = buffer

test('calling network by id', () => {
  const network = lndEnvConfig()
  expect(network).toBeDefined()
})

process.env.LND_INVOICE_MACAROON = 'a4c1e3d8b5902f7e169a'
process.env.LND_HOST = 'localhost'
process.env.LND_PORT = '8080'
// eslint-disable-next-line max-len
process.env.LND_TLS_CERT = '2d2d2d2d2d424547494e2043455254494649434154452d2d2d2d2d0a4d4949434844434341634b6741774942416749514447574d4765687a477034646c7a324170794d78396a414b42676771686b6a4f50515144416a41764d5238770a485159445651514b45785a73626d5167595856306232646c626d56795958526c5a43426a5a584a304d517777436759445651514445774e69623249774868634e0a4d6a4d774e7a41324d5445304f5445785768634e4d6a51774f444d774d5445304f544578576a41764d523877485159445651514b45785a73626d5167595856300a6232646c626d56795958526c5a43426a5a584a304d517777436759445651514445774e69623249775754415442676371686b6a4f5051494242676771686b6a4f0a50514d4242774e434141523365646b65766c734b5273563169616d45706359666b2b364b50526162476765456d526e625a7236333965344637625870416b49520a4b4741774e33746a4c307455337a6455686d54374c685a36756e6174647363736f34472f4d4947384d41344741315564447745422f77514541774943704441540a42674e56485355454444414b4267677242674546425163444154415042674e5648524d4241663845425441444151482f4d4230474131556444675157424251710a6d487479546b38653356347254682b52785247644e6a53716844426c42674e5648524545586a426367674e6962324b4343577876593246736147397a644949440a596d39696767787762327868636931754d79316962324b434248567561586943436e56756158687759574e725a58534342324a315a6d4e76626d3648424838410a41414748454141414141414141414141414141414141414141414748424b775741415177436759494b6f5a497a6a3045417749445341417752514967416754760a6b4d6e526849684f397969725966425633696e33542b3339725578444e4b41545967596e7839494349514474672f7761364362554c5961545774583356704b310a356679785544692f4f524c2b576167465362755474513d3d0a2d2d2d2d2d454e442043455254494649434154452d2d2d2d2d0a'

test('load config', () => {
  const network = lndEnvConfig(1)
  const alice = network({username: 'alice', macaroonType: 'invoice'})
  expect(alice).toHaveProperty('baseUrl', 'localhost:8080')
  expect(alice).toHaveProperty('macaroon', 'a4c1e3d8b5902f7e169a')
  expect(alice).toHaveProperty('cert')
})

test('load config with missing envs', () => {
  const network = lndEnvConfig(1)
  expect(() => network({username: 'alice'})).toThrow('macaroon')
})

test('cert is loaded as utf8', () => {
  const network = lndEnvConfig(1)
  const alice = network({username: 'alice', macaroonType: 'invoice'})
  const {cert} = alice
  expect(isValidUTF8(cert)).toBe(true)
  expect(cert.length).toBe(794)
  expect(cert.startsWith('-----BEGIN CERTIFICATE-----')).toBe(true)
  expect(cert.endsWith('-----END CERTIFICATE-----\n')).toBe(true)
  expect(cert.includes('MIICHDCCAcKgAwIBAgIQDG')).toBe(true)
})
